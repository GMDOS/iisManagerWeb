@using IisManagerWeb.Models

@if (visible)
{
    <div class="context-menu" style="left: @($"{x}px"); top: @($"{y}px");" @onclick:stopPropagation="true">
        <div class="context-menu-item" @onclick="@(() => OnAction("start"))">
            <i class="bi bi-play-circle"></i> Iniciar
        </div>
        <div class="context-menu-item" @onclick="@(() => OnAction("stop"))">
            <i class="bi bi-stop-circle"></i> Parar
        </div>
        <div class="context-menu-item" @onclick="@(() => OnAction("restart"))">
            <i class="bi bi-arrow-clockwise"></i> Reiniciar
        </div>
        @if (hasMultipleSelection)
        {
            <div class="context-menu-divider"></div>
            <div class="context-menu-item" @onclick="@(() => OnAction("group"))">
                <i class="bi bi-folder-plus"></i> Agrupar
            </div>
        }
    </div>
}

@code {
    private bool visible;
    private double x;
    private double y;
    private bool hasMultipleSelection;

    [Parameter]
    public EventCallback<string> OnActionCallback { get; set; }

    public void Show(double clientX, double clientY, bool multipleSelection)
    {
        x = clientX;
        y = clientY;
        hasMultipleSelection = multipleSelection;
        visible = true;
        StateHasChanged();
    }

    public void Hide()
    {
        visible = false;
        StateHasChanged();
    }

    private async Task OnAction(string action)
    {
        await OnActionCallback.InvokeAsync(action);
        Hide();
    }
} 